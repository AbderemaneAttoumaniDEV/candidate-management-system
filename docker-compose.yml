version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: candidate_manager_db
    environment:
      POSTGRES_DB: candidate_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - candidate_manager_network

  # Backend NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: candidate_manager_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      DB_DATABASE: candidate_manager
      PORT: 3001
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - candidate_manager_network

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: candidate_manager_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - candidate_manager_network

volumes:
  postgres_data:

networks:
  candidate_manager_network:
    driver: bridge 